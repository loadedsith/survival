{"name":"Survival","tagline":"a game you play by simulating a slime mold. Its slick.","body":"#Survival Road Map\r\n1. ~~Fork 3d Perlin Noise With Threejs~~\r\n* ~~Re-brand~~\r\n* ~~Tile Service~~\r\n* ~~Mock a food source~~\r\n* ~~Create a Cell~~\r\n* ~~A Level with mock food source~~\r\n* ~~Add Cell to Level~~\r\n* ~~Implement basic web worker~~\r\n* ~~Cell movement within level~~\r\n* ~~Display Manager investigates managers, renders what it sees~~\r\n* ~~Workers for cells~~\r\n* ~~Cell manager~~\r\n* ~~Ground tiles shouldn't animate, water should but only slightly~~\r\n* ~~Cell delta movement within level, Prevent movement off board~~\r\n* ~~Food manager~~\r\n* ~~Tile position callbacks should be of 2 types, run once, keep going~~\r\n* ~~Tile position callbacks should be able to disable themselves after running a conditional.~~\r\n* ~~cells belong on land, not in the sky! Ray cast~~\r\n* ~~Drive cell to food source, ensure it knows it's there~~\r\n* ~~Small group of cells~~\r\n* ~~Make the developer UI prettier~~\r\n* ~~Cells can become hungry~~\r\n* ~~Moving a cell makes it more hungry~~\r\n* ~~Color code cells to show hunger~~\r\n* ~~Simple GUI to show cells and hunger~~\r\n* ~~Show hunger over cells~~\r\n* ~~Clean up~~\r\n* ~~cellManager getter can ask for cell health by id~~\r\n* ~~Worker asks for health on move~~\r\n* ~~async message handler updates local var~~\r\n* ~~worker use foodLocation to move toward food found (if hungry)~~\r\n* ~~Blob transfer as script, not text~~\r\n* ~~cellManager.nearestFoodSourceToCell() (also cell.nearest.foodSource())~~\r\n  * ~~and worker message getter~~\r\n* ~~worker can get health from food by eating near by food~~\r\n  * ~~if hungry~~\r\n* ~~cellManager validates eating~~\r\n  * ~~food is near enough?~~\r\n* Advanced Cell Move Validation\r\n  * sets interval to feed\r\n    * sends health status to worker \r\n    * on move checks distance, until moves away, cancels interval\r\n\t* Replicate deltaMove behavior, but cellWorker only sends destination\r\n\t\t* cellWorker sends destination and \"speed\"\r\n\t\t\t* log of speed * some factor is impact on health. speed of 1 = insta-death (possibly just invalid), speed of 0 = free\r\n* ~~Cell commands in gui, map textbox to input~~\r\n\r\n* Cells stick together\r\n  * cellManager.getNeigborCells()\r\n  * cellManager maxMoveDistance (could fall back to moveTowards or kick back an invalid move message)\r\n  * simpleCell.turnTo\r\n  * simpleCell.moveTowards\r\n  * simpleCell.getAveragePositionOfCells\r\n* ~~Level Manager~~\r\n* ~~Level Manager answers if a movement takes you off the board~~ Update: The cell does this now, but the level manager and renderer are aware of a global bounds\r\n* Level Manager extends board if movement there is requested\r\n* Level Manager answers if a movement is blocked\r\n* Level Manager answers how difficult a move is\r\n* Key press toggle hunger displayed over cells\r\n* ~~Cell Death from hunger~~\r\n* Cell Trait #1: Movement: override, any kind\r\n* Cell Trait #2: Reproduce: override, simple logging of output\r\n* Colony movement\r\n* Log Genetic Inheritance [P. Square] swapping of traits on touch\r\n* Ensure cell triggers correct [P. Square]\r\n* Create cell with correct genetics\r\n* Test for fertility:\tConsuming a food, should result in hunger going down & Touching another cell should result in genetic exchange\r\n* Colony Genetics: All cells have all genetic code in the colony\r\n* Death Causes infected state\r\n* Giving food while infected infects\r\n* Being infected harms cell until it dies, comes back as zombie cell\r\n* Shuffle movement genes on death, if one that works after death is found, map that one, otherwise stop moving\r\n* Add second mock food source, dangerously rich\r\n* Cell interact with food source randomly\r\n* Cell can tell features of food sources\r\n* Cell can create own cell manager?\r\n* Cell can poach cells to belong to its manager?\r\n* Colony Genetics: Cells only have genetic code they've been exposed to","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}